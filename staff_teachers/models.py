from django.db import models

# Create your models here.
class TblTeachersPay(models.Model):
    username = models.CharField(max_length=50)
    first_name = models.CharField(max_length=50)
    last_name = models.CharField(max_length=50)
    month = models.CharField(max_length=50)
    course = models.CharField(max_length=20)
    education = models.CharField(max_length=50)
    level = models.CharField(max_length=50)
    normal_mark1 = models.CharField(max_length=5)
    normal_mark2 = models.CharField(max_length=5)
    special_mark = models.CharField(max_length=5)
    number_normal = models.IntegerField()
    special_number = models.IntegerField()
    onsite_mark = models.CharField(max_length=5)
    onsite_number = models.IntegerField()
    normal_class_hours = models.IntegerField()
    normal_class_total = models.IntegerField()
    afternoon_activity_rate = models.IntegerField()
    activities_hours = models.IntegerField()
    activities_total = models.IntegerField()
    quality_work_rate = models.IntegerField()
    tod_hours = models.IntegerField()
    tod_total = models.IntegerField()
    special_class_rate = models.IntegerField()
    tutored_hours = models.IntegerField()
    tutored_total = models.IntegerField()
    eca_rate = models.IntegerField()
    eca_hours = models.IntegerField()
    eca_total = models.IntegerField()
    meeting_rate = models.IntegerField()
    meeting_number = models.IntegerField()
    meeting_total = models.IntegerField()
    placement_rate = models.IntegerField()
    test_number = models.IntegerField()
    test_total = models.IntegerField()
    internet_total = models.IntegerField()
    normal_class2_rate = models.IntegerField()
    normal2_hours = models.IntegerField()
    normal2_total = models.IntegerField()
    onsite_rate = models.IntegerField()
    onsite_hours = models.IntegerField()
    onsite_total = models.IntegerField()
    salaries = models.IntegerField()
    summation1 = models.IntegerField()
    advance = models.IntegerField()
    advance_total = models.IntegerField()
    charity = models.IntegerField()
    charity_total = models.IntegerField()
    others = models.IntegerField()
    others_total = models.IntegerField()
    summation2 = models.IntegerField()
    gross_total = models.IntegerField()
    date_submitted = models.DateTimeField()
    payment_status = models.CharField(max_length=10)
    approval_status = models.CharField(max_length=50)
    year = models.CharField(max_length=5)

    class Meta:
        managed = False
        db_table = 'tbl_teachers_pay'


class TblSchoolInvoice(models.Model):
    invoiceid = models.AutoField(db_column='invoiceID', primary_key=True)  # Field name made lowercase.
    invoice_number = models.CharField(max_length=15)
    first_name = models.CharField(max_length=100)
    billing_self = models.CharField(max_length=100)
    issue_date = models.DateField()
    due_date = models.DateField()
    language_category = models.CharField(max_length=20)
    language_checkbox = models.CharField(max_length=100)
    computer_category = models.CharField(max_length=20)
    computer_checkbox = models.CharField(max_length=50)
    languages = models.CharField(max_length=20)
    level = models.CharField(max_length=100)
    start_date = models.DateField()
    end_date = models.DateField()
    dollar_rate = models.IntegerField()
    euro_rate = models.IntegerField()
    previous_balance = models.IntegerField()
    balance_ksh_total = models.IntegerField()
    balance_dollar_total = models.IntegerField()
    balance_euro_total = models.IntegerField()
    language_hours = models.IntegerField()
    language_ksh_total = models.IntegerField()
    language_dollar_total = models.IntegerField()
    language_euro_total = models.IntegerField()
    registration_amount = models.IntegerField()
    registration_ksh_total = models.IntegerField()
    registration_dollar_total = models.IntegerField()
    registration_euro_total = models.IntegerField()
    text_book_number = models.IntegerField()
    text_book_amount = models.IntegerField()
    text_book_ksh_total = models.IntegerField()
    text_book_dollar_total = models.IntegerField()
    text_book_euro_total = models.IntegerField()
    activity_fee_amount = models.IntegerField()
    activity_fee_ksh_total = models.IntegerField()
    activity_fee_dollar_total = models.IntegerField()
    activity_fee_euro_total = models.IntegerField()
    id_card_amount = models.IntegerField()
    id_card_ksh_total = models.IntegerField()
    id_card_dollar_total = models.IntegerField()
    id_card_euro_total = models.IntegerField()
    ict_hours = models.IntegerField()
    ict_ksh_total = models.IntegerField()
    ict_dollar_total = models.IntegerField()
    ict_euro_total = models.IntegerField()
    interpretation_hours = models.IntegerField()
    interpretation_amount = models.IntegerField()
    interpretation_ksh_total = models.IntegerField()
    interpretation_dollar_total = models.IntegerField()
    interpretation_euro_total = models.IntegerField()
    translation_hours = models.IntegerField()
    translation_amount = models.IntegerField()
    translation_ksh_total = models.IntegerField()
    translation_dollar_total = models.IntegerField()
    translation_euro_total = models.IntegerField()
    grand_total_ksh_total = models.IntegerField()
    grand_total_dollar_total = models.IntegerField()
    grand_total_euro_total = models.IntegerField()
    discount_amount = models.IntegerField()
    discount_ksh_total = models.IntegerField()
    discount_dollar_total = models.IntegerField()
    discount_euro_total = models.IntegerField()
    effected_payment_amount = models.IntegerField()
    effected_payment_ksh_total = models.IntegerField()
    effected_payment_dollar_total = models.IntegerField()
    effected_payment_euro_total = models.IntegerField()
    overall_balance_ksh_total = models.IntegerField()
    overall_balance_dollar_total = models.IntegerField()
    overall_balance_euro_total = models.IntegerField()
    month = models.CharField(max_length=30)
    invoice_number1 = models.IntegerField()
    payment_status = models.CharField(max_length=10)
    year = models.CharField(max_length=10)

    class Meta:
        managed = False
        db_table = 'tbl_school_invoice'


class TblRecordSlip(models.Model):
    invoiceid = models.AutoField(db_column='invoiceID', primary_key=True)  # Field name made lowercase.
    first_name = models.CharField(max_length=100)
    last_name = models.CharField(max_length=100)
    job_description = models.CharField(max_length=100)
    language_from = models.CharField(max_length=50)
    language_to = models.CharField(max_length=50)
    start_date = models.DateField()
    interpretation_hours = models.IntegerField()
    total_interpretation = models.IntegerField()
    proof_read_words = models.IntegerField()
    proof_read_total = models.IntegerField()
    translated_words = models.IntegerField()
    translated_total = models.IntegerField()
    transcription_hours = models.IntegerField()
    transcription_total = models.IntegerField()
    forty_translation = models.IntegerField()
    forty_proof_reading = models.IntegerField()
    forty_interpretation = models.IntegerField()
    forty_transcription = models.IntegerField()
    sixty_translation = models.IntegerField()
    sixty_proof_reading = models.IntegerField()
    sixty_interpretation = models.IntegerField()
    sixty_transcription = models.IntegerField()
    stamp_seal_translation = models.IntegerField()
    stamp_seal_proof_reading = models.IntegerField()
    sub_total_translation = models.IntegerField()
    sub_total_proof_reading = models.IntegerField()
    sub_total_interpretation = models.IntegerField()
    sub_total_transcription = models.IntegerField()
    total_forty_percent = models.IntegerField()
    total_sixty_percent = models.IntegerField()
    level_of_education = models.CharField(max_length=100)
    tuition_amount = models.CharField(max_length=100)
    tuition_hours = models.CharField(max_length=100)
    tuition_total_paid = models.CharField(max_length=100)
    software_service_total = models.CharField(max_length=100)
    ies_total = models.CharField(max_length=100)
    grand_total_ksh = models.IntegerField()
    month = models.CharField(max_length=30)
    payment_status = models.CharField(max_length=10)
    service_payment_status = models.CharField(max_length=10)
    slip_no = models.IntegerField()
    year = models.CharField(max_length=10)

    class Meta:
        managed = False
        db_table = 'tbl_record_slip'

DAY_CHOICES = [
    ('Monday', 'Monday'),
    ('Tuesday', 'Tuesday'),
    ('Wednesday', 'Wednesday'),
    ('Thursday', 'Thursday'),
    ('Friday', 'Friday')
]

class Timetable(models.Model):
    day = models.CharField(max_length=200, choices=DAY_CHOICES, null=True, blank=True)
    class_no = models.IntegerField()
    from_time = models.CharField(max_length=200, null=True, blank=True)
    to_time = models.CharField(max_length=200, null=True, blank=True)
    lecturer = models.CharField(max_length=250, null=True, blank=True)
    courses = models.CharField(max_length=256, null=True, blank=True)
    room = models.CharField(max_length=100, null=True, blank=True)

class studentsResults(models.Model):
    congregation = models.CharField(max_length=200, null=True, blank=True)
    s_no = models.CharField(max_length=200, null=True, blank=True)
    reg_no = models.CharField(max_length=200, null=True, blank=True)
    name = models.CharField(max_length=200, null=True, blank=True)
    plato_republic = models.CharField(max_length=200, null=True, blank=True)
    modern_world_history = models.CharField(max_length=200, null=True, blank=True)
    special_ethicks = models.CharField(max_length=200, null=True, blank=True)
    logic = models.CharField(max_length=200, null=True, blank=True)
    emmanuel_kant = models.CharField(max_length=200, null=True, blank=True)
    edith_stein = models.CharField(max_length=200, null=True, blank=True)
    philosophical_latin = models.CharField(max_length=200, null=True, blank=True)
    christianity_philosophy = models.CharField(max_length=200, null=True, blank=True)
    ancient_thought = models.CharField(max_length=200, null=True, blank=True)
    comprehensive_written = models.CharField(max_length=200, null=True, blank=True)
    comprehensives_oral = models.CharField(max_length=200, null=True, blank=True)
    

